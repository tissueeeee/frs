<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

@model IndexModel
@{
    ViewData["Title"] = "Home Page";
}

<style>
    .main-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }
    
    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        transition: transform 0.3s ease;
    }
    
    .card:hover {
        transform: translateY(-5px);
    }
    
    .card-header {
        background-color: #f8f9fa;
        border-bottom: none;
        padding: 1.5rem;
        border-radius: 10px 10px 0 0 !important;
    }
    
    .card-body {
        padding: 1.5rem;
    }
    
    .table {
        margin-bottom: 0;
    }
    
    .table th {
        background-color: #f8f9fa;
        border-top: none;
    }
    
    .btn-primary {
        background-color: #0d6efd;
        border: none;
        padding: 0.5rem 1.5rem;
        border-radius: 5px;
    }
    
    .btn-primary:hover {
        background-color: #0b5ed7;
    }
    
    .alert {
        border-radius: 10px;
        margin-bottom: 2rem;
    }
    
    .search-container {
        position: relative;
    }
    
    .search-container .input-group-text {
        background-color: transparent;
        border-left: none;
    }
    
    .search-container input {
        border-right: none;
    }
    
    .search-container input:focus {
        border-color: #dee2e6;
        box-shadow: none;
    }
    
    .search-container input:focus + .input-group-text {
        border-color: #dee2e6;
    }
    
    #courseSelect option {
        padding: 8px;
    }
    
    #courseSelect option:first-child {
        color: #6c757d;
    }
    
    .welcome-section {
        text-align: center;
        margin-bottom: 2rem;
        padding: 2rem;
        background-color: #f8f9fa;
        border-radius: 10px;
    }
    
    .attendance-summary {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }
    
    .summary-card {
        background-color: #fff;
        border-radius: 10px;
        padding: 1rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    .summary-card h5 {
        color: #6c757d;
        margin-bottom: 1rem;
    }
    
    .student-list {
        max-height: 300px;
        overflow-y: auto;
    }
    
    .student-list::-webkit-scrollbar {
        width: 5px;
    }
    
    .student-list::-webkit-scrollbar-thumb {
        background-color: #dee2e6;
        border-radius: 5px;
    }

    .overwrite-btn {
        position: fixed;
        bottom: 20px;
        right: 100px;
        z-index: 1000;
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .attendance-status-select {
        width: 100%;
        padding: 8px;
        border-radius: 4px;
        border: 1px solid #ddd;
    }

    .student-row {
        cursor: pointer;
    }

    .student-row:hover {
        background-color: #f8f9fa;
    }
</style>

<div class="main-container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
        </div>
    }

    <div class="card">
        <div class="card-header">
            <h5 class="mb-0"><i class="fas fa-book me-2"></i>Select Course</h5>
        </div>
        <div class="card-body">
            <form asp-action="Index" asp-controller="Home" method="post" id="courseForm">
                <div class="search-container mb-3">
                    <div class="input-group">
                        <input type="text" 
                               id="courseSearch" 
                               class="form-control" 
                               placeholder="Search course code or name..."
                               autocomplete="off">
                        <span class="input-group-text">
                            <i class="fas fa-search"></i>
                        </span>
                    </div>
                </div>
                <div class="mb-3">
                    <select asp-for="CourseCode" 
                            id="courseSelect" 
                            class="form-select" 
                            required>
                        <option value="">-- Select Course Code --</option>
                        @if (ViewBag.CourseCodes != null)
                        {
                            @foreach (var course in ViewBag.CourseCodes)
                            {
                                <option value="@course.COURSECODE">
                                    @course.COURSECODE - @course.COURSENAME
                                </option>
                            }
                        }
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-sync-alt me-2"></i>Load Data
                </button>
            </form>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.CourseCode) && Model.Programme != null)
    {
        <div class="welcome-section">
            <h2>Welcome to @Model.Programme.programmeCode</h2>
            <p class="text-muted">@Model.Programme.programmeName</p>
        </div>

        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>Course Information</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <tr>
                            <th>Lecturer</th>
                            <td>@Model.Programme.programmeLecturer</td>
                            <th>Students</th>
                            <td>@(Model.StudentListAttend?.Count + Model.StudentListAbsent?.Count ?? 0)</td>
                        </tr>
                        <tr>
                            <th>Block</th>
                            <td>@Model.Programme.programmeBlock</td>
                            <th>Room</th>
                            <td>@Model.Programme.programmeRoom</td>
                        </tr>
                        <tr>
                            <th>Date</th>
                            <td>@Model.Programme.programmeDate (@Model.Programme.programmeOnEvery)</td>
                            <th>Time</th>
                            <td>@Model.Programme.programmeTime</td>
                        </tr>
                    </table>
                </div>
                <div class="mt-3">
                    <button type="button" id="sendReminderBtn" class="btn btn-info">
                        <i class="fas fa-envelope me-2"></i>Send Class Reminder
                    </button>
                </div>
            </div>
        </div>

        <div class="attendance-summary">
            <div class="summary-card">
                <h5><i class="fas fa-user-check me-2"></i>Attendance (@(Model.StudentTotal?.numberStudentAttend ?? 0))</h5>
                <div class="student-list">
                    @if (Model.StudentListAttend != null)
                    {
                        var attendCount = 1;
                        @foreach (var emp in Model.StudentListAttend)
                        {
                            <div class="student-row mb-2" data-student-number="@emp.StudentNumber" data-student-name="@emp.StudentName">
                                @(attendCount++). @emp.StudentName
                            </div>
                        }
                    }
                </div>
            </div>

            <div class="summary-card">
                <h5><i class="fas fa-user-times me-2"></i>Absent (@(Model.StudentTotal?.numberStudentAbsent ?? 0))</h5>
                <div class="student-list">
                    @if (Model.StudentListAbsent != null)
                    {
                        var absentCount = 1;
                        @foreach (var emp in Model.StudentListAbsent)
                        {
                            <div class="student-row mb-2" data-student-number="@emp.StudentNumber" data-student-name="@emp.StudentName">
                                @(absentCount++). @emp.StudentName
                            </div>
                        }
                    }
                </div>
            </div>

            <div class="summary-card">
                <h5><i class="fas fa-money-bill-wave me-2"></i>Fees Due (@(Model.StudentTotal?.numberStudentDebt ?? 0))</h5>
                <div class="student-list">
                    @if (Model.StudentListDebt != null)
                    {
                        var debtCount = 1;
                        @foreach (var emp in Model.StudentListDebt)
                        {
                            <div class="mb-2">@(debtCount++). @emp.StudentName</div>
                        }
                    }
                </div>
            </div>

            <div class="summary-card">
                <h5><i class="fas fa-user-shield me-2"></i>Stranger (@(Model.StudentTotal?.numberStudentStranger ?? 0))</h5>
                <div class="student-list">
                    @if (Model.StudentListStranger != null)
                    {
                        var strangerCount = 1;
                        @foreach (var emp in Model.StudentListStranger)
                        {
                            <div class="mb-2">@(strangerCount++). @emp.StudentName</div>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-check-circle me-2"></i>Data Verification</h5>
            </div>
            <div class="card-body">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    <p class="mb-0">Please review the data above carefully. Once verified, the data will be stored in the database.</p>
                </div>
                <form asp-action="StoreData" asp-controller="Home" method="post">
                    <input type="hidden" name="courseCode" value="@Model.CourseCode" />
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save me-2"></i>Verify and Store Data
                    </button>
                </form>
            </div>
        </div>

        <div class="text-muted text-end">
            <small>Last Updated: @DateTime.Now.ToString("MMM dd, yyyy HH:mm")</small>
        </div>

        <button type="button" class="btn btn-warning overwrite-btn" data-bs-toggle="modal" data-bs-target="#overwriteModal">
            <i class="fas fa-edit me-2"></i>Overwrite Attendance
        </button>

        <!-- Add this hidden input after the search container -->
        <input type="hidden" id="selectedStudentNumber">

        <!-- Overwrite Modal -->
        <div class="modal fade" id="overwriteModal" tabindex="-1" aria-labelledby="overwriteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="overwriteModalLabel">Overwrite Attendance Status</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Select Student</label>
                            <select class="form-select" id="studentSelect">
                                <option value="">-- Select Student --</option>
                                @if (Model.StudentListAttend != null)
                                {
                                    @foreach (var student in Model.StudentListAttend)
                                    {
                                        <option value="@student.StudentNumber">@student.StudentName (Present)</option>
                                    }
                                }
                                @if (Model.StudentListAbsent != null)
                                {
                                    @foreach (var student in Model.StudentListAbsent)
                                    {
                                        <option value="@student.StudentNumber">@student.StudentName (Absent)</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Attendance Status</label>
                            <select class="form-select" id="attendanceStatus">
                                <option value="Present">Present</option>
                                <option value="Absent">Absent</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveOverwrite">Save Changes</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Course search functionality
            $("#courseSearch").on("input", function() {
                var searchText = $(this).val().toLowerCase().trim();
                console.log('Searching for:', searchText);
                
                $("#courseSelect option").each(function() {
                    var option = $(this);
                    if (option.val() === "") return; // Skip the default "Select Course" option
                    
                    var text = option.text().toLowerCase();
                    var courseCode = option.val().toLowerCase();
                    
                    console.log('Checking option:', text);
                    
                    if (text.includes(searchText) || courseCode.includes(searchText)) {
                        option.show();
                    } else {
                        option.hide();
                    }
                });

                // If Enter is pressed and there's only one visible option
                if (event.key === 'Enter') {
                    var visibleOptions = $("#courseSelect option:visible");
                    if (visibleOptions.length === 1) {
                        visibleOptions.prop('selected', true);
                        $("#courseSelect").trigger('change');
                    }
                }
            });

            // Clear search when a course is selected
            $("#courseSelect").change(function() {
                $("#courseSearch").val('');
                $("#courseSelect option").show();
            });

            // Handle save button click
$('#saveOverwrite').on('click', function() {
    console.log('Save button clicked');
    
    const studentNumber = $('#studentSelect').val();
    const attendanceStatus = $('#attendanceStatus').val() === 'Present' ? 1 : 0;
    
    console.log('Student Number:', studentNumber);
    console.log('Attendance Status:', attendanceStatus);

    if (!studentNumber) {
        alert('Please select a student');
        return;
    }

    const token = $('input[name="__RequestVerificationToken"]').val();

    $.ajax({
        url: '/Home/UpdateAttendanceStatus',
        type: 'POST',
        headers: {
            'RequestVerificationToken': token
        },
        contentType: 'application/json',
        data: JSON.stringify({
            studentNumber: studentNumber,
            attendanceStatus: attendanceStatus
        }),
        beforeSend: function() {
            $('#saveOverwrite').prop('disabled', true).text('Saving...');
        },
        success: function(response) {
            console.log('Response:', response);
            if (response.success) {
                alert('Attendance updated successfully!');
                $('#overwriteModal').modal('hide');
                setTimeout(function() {
                    location.reload();
                }, 500);
            } else {
                alert('Failed to update attendance: ' + (response.message || 'Unknown error'));
            }
        },
        error: function(xhr, status, error) {
            console.error('Error:', error);
            console.error('Response:', xhr.responseText);
            alert('Error updating attendance. Please try again.');
        },
        complete: function() {
            $('#saveOverwrite').prop('disabled', false).text('Save Changes');
        }
    });
});

            // Handle student row click
            $('.student-row').click(function() {
                const studentNumber = $(this).data('student-number');
                const studentName = $(this).data('student-name');
                
                // Update the select element
                $('#studentSelect').val(studentNumber);
                
                // Show the modal
                $('#overwriteModal').modal('show');
            });

            // Add click handler for reminder button
            $('#sendReminderBtn').click(function() {
                $.ajax({
                    url: '@Url.Action("SendReminder", "Home")',
                    type: 'POST',
                    data: {
                        courseCode: '@Model.CourseCode'
                    },
                    success: function(response) {
                        if (response.success) {
                            alert('Reminder emails have been sent successfully!');
                        } else {
                            alert('Error sending reminders: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while sending reminders.');
                    }
                });
            });
        });
    </script>
}

<!-- Add anti-forgery token -->
@Html.AntiForgeryToken()

